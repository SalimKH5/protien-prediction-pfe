{"ast":null,"code":"var _jsxFileName = \"/media/salim-2000/a9a586d4-f43b-4b32-9807-2702438d038d/home/khadir/development /M2/M\\xE9moires D\\xE9partement Informatique-20221014T112409Z-001/Projet pfe final/projet pfe/portfunprid/src/component/Prediction/Prediction.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Prediction.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Prediction() {\n  _s();\n  const [protein, setProtein] = useState();\n  function isValidFastaInput(input) {\n    // Define regular expression to match FASTA format\n    const fastaRegex = /^>\\w+\\n[A-Z\\n]+\\*?$/;\n\n    // Check if input matches the regular expression\n    return fastaRegex.test(input);\n  }\n  const handleTextAreaChange = event => {\n    const isValid = isValidFastaInput(event.target.value);\n    if (isValid) {\n      console.log(\"Input is a valid FASTA format\");\n    } else {\n      console.log(\"Input is not a valid FASTA format\");\n    }\n    setProtein(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please Inter your Protien Sequence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"\",\n      id: \"\",\n      onChange: handleTextAreaChange,\n      value: protein,\n      placeholder: \"enter a full-length protein sequence for prediction, with optional FASTA header line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The function of your protien sequence is :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-predictions\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: protein\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Prediction, \"WpwOK0y3JqZf3wbphsPlNUP9jSI=\");\n_c = Prediction;\nexport default Prediction;\nvar _c;\n$RefreshReg$(_c, \"Prediction\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Prediction","_s","protein","setProtein","isValidFastaInput","input","fastaRegex","test","handleTextAreaChange","event","isValid","target","value","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","onChange","placeholder","_c","$RefreshReg$"],"sources":["/media/salim-2000/a9a586d4-f43b-4b32-9807-2702438d038d/home/khadir/development /M2/Mémoires Département Informatique-20221014T112409Z-001/Projet pfe final/projet pfe/portfunprid/src/component/Prediction/Prediction.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport \"./Prediction.css\"\nfunction Prediction() {\n\n    const [protein,setProtein]=useState()\n\n    function isValidFastaInput(input) {\n      // Define regular expression to match FASTA format\n      const fastaRegex = /^>\\w+\\n[A-Z\\n]+\\*?$/;\n    \n      // Check if input matches the regular expression\n      return fastaRegex.test(input);\n    }\n    \n    \n\n\n    const handleTextAreaChange = (event) => {\n      const isValid = isValidFastaInput(event.target.value);\n      if (isValid) {\n        console.log(\"Input is a valid FASTA format\");\n        \n      } else {\n        console.log(\"Input is not a valid FASTA format\");\n      }  \n      \n      setProtein(event.target.value);\n      }\n  return (\n    <div className=\"prediction-container\">\n        <h1>Please Inter your Protien Sequence</h1>\n        <textarea name=\"\" id=\"\" onChange={handleTextAreaChange}  value={protein} placeholder='enter a full-length protein sequence for prediction, with optional FASTA header line'>\n        </textarea>\n        <h1>The function of your protien sequence is :</h1>\n        <div className=\"result-predictions\">\n                <h1>{protein}</h1>\n        </div>\n    </div>\n  )\n}\n\nexport default Prediction"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACzB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACN,QAAQ,CAAC,CAAC;EAErC,SAASO,iBAAiBA,CAACC,KAAK,EAAE;IAChC;IACA,MAAMC,UAAU,GAAG,qBAAqB;;IAExC;IACA,OAAOA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;EAC/B;EAKA,MAAMG,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAMC,OAAO,GAAGN,iBAAiB,CAACK,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IACrD,IAAIF,OAAO,EAAE;MACXG,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAE9C,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD;IAEAX,UAAU,CAACM,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACL,oBACEb,OAAA;IAAKgB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACjCjB,OAAA;MAAAiB,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CrB,OAAA;MAAUsB,IAAI,EAAC,EAAE;MAACC,EAAE,EAAC,EAAE;MAACC,QAAQ,EAAEf,oBAAqB;MAAEI,KAAK,EAAEV,OAAQ;MAACsB,WAAW,EAAC;IAAsF;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjK,CAAC,eACXrB,OAAA;MAAAiB,QAAA,EAAI;IAA0C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDrB,OAAA;MAAKgB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAC3BjB,OAAA;QAAAiB,QAAA,EAAKd;MAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACnB,EAAA,CArCQD,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAuCnB,eAAeA,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}